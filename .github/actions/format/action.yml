name: Format and Autofix
description: Run formatting tools (pyupgrade, ruff, docformatter) and push autofix commit if needed.

inputs:
  pat_autofix:
    description: Personal Access Token with permission to push autofix commits
    required: true
    default: ''

outputs:
  did_push:
    description: Whether an autofix commit was pushed
    value: ${{ steps.push.outputs.did_push || 'false' }}

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Check out the contributor's branch (the PR head), not the merge ref
        ref: ${{ github.head_ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        fetch-depth: 0
        persist-credentials: false

    - name: Stop if last commit is our autofix
      id: skip_autofix
      shell: bash
      run: |
        if git log -1 --pretty=%B | grep -q "\[autofix\]"; then
          echo "skip=yes" >> $GITHUB_OUTPUT
        else
          echo "skip=no" >> $GITHUB_OUTPUT
        fi

    - name: Set up Python
      if: steps.skip_autofix.outputs.skip == 'no'
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install PDM
      if: steps.skip_autofix.outputs.skip == 'no'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install pdm

    - name: Install dependencies
      if: steps.skip_autofix.outputs.skip == 'no'
      shell: bash
      run: |
        pdm install --no-self -G format

    - name: Pyupgrade
      if: steps.skip_autofix.outputs.skip == 'no'
      shell: bash
      run: |
        find src -name "*.py" \
          -exec pdm run pyupgrade --py38-plus --exit-zero-even-if-changed {} +

    - name: Ruff Auto-Fix
      if: steps.skip_autofix.outputs.skip == 'no'
      uses: chartboost/ruff-action@v1
      with:
        args: check . --fix > /dev/null 2>&1
      continue-on-error: true

    - name: Ruff Format Check
      if: steps.skip_autofix.outputs.skip == 'no'
      uses: chartboost/ruff-action@v1
      with:
        args: format .

    - name: Docformatter
      if: steps.skip_autofix.outputs.skip == 'no'
      shell: bash
      run: |
        set +e
        pdm run docformatter --in-place --recursive src/
        code=$?
        if [ "$code" != "0" ] && [ "$code" != "3" ]; then
          exit $code
        fi

    - name: Commit changes if any
      id: commit
      if: steps.skip_autofix.outputs.skip == 'no'
      shell: bash
      run: |
        if ! git diff --quiet; then
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -am "style: apply autofix [autofix]"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Push autofix with PAT
      id: push
      if: steps.skip_autofix.outputs.skip == 'no' && steps.commit.outputs.has_changes == 'true' && inputs.pat_autofix != ''
      shell: bash
      env:
        PAT: ${{ inputs.pat_autofix }}
      run: |
        git remote set-url origin "https://${PAT}@github.com/${{ github.repository }}.git"
        git push origin HEAD:${{ github.head_ref || github.ref_name }}
        echo "did_push=true" >> "$GITHUB_OUTPUT"
